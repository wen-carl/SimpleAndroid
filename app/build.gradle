apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        manifestPlaceholders = [hostName:"www.example.com"]
        applicationId "com.seven.simpleandroid"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }
    signingConfigs {
        release {
            storeFile file('key.keystore')
            storePassword 'android'
            keyAlias = 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            //applicationIdSuffix ".debug"
            versionNameSuffix ".debug"
            ext.alwaysUpdateBuildId = false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging {
            initWith(debug)
            buildConfigField("String","API_URL","\"https://www.baidu.com\"")
            manifestPlaceholders = [hostName:"internal.example.com"]
            debuggable = false
            signingConfig signingConfigs.release
            //applicationIdSuffix ".debugStaging"
        }
    }
    flavorDimensions 'api', 'mode'
    productFlavors {
        demo {
            dimension = 'mode'
            //applicationIdSuffix ".demo"
            versionNameSuffix ".demo"
        }
        full {
            dimension = 'mode'
            //applicationIdSuffix ".full"
            versionNameSuffix ".full"
        }

        minApi23 {
            dimension = 'api'
            minSdkVersion 23
            versionCode 20000  + android.defaultConfig.versionCode
            versionNameSuffix "-minApi23"
        }

        minApi21 {
            dimension = 'api'
            minSdkVersion 21
            versionCode = 10000 + android.defaultConfig.versionCode
            versionCode
            versionNameSuffix "-minApi21"
        }
    }
    splits {
        // Configures multiple APKs based on screen density.
        density {

            // Configures multiple APKs based on screen density.
            enable false

            // Specifies a list of screen densities Gradle should not create multiple APKs for.
            //exclude "ldpi", "hdpi", "mdpi"

            // Specifies a list of compatible screen size settings for the manifest.
            //compatibleScreens 'small', 'normal', 'large', 'xlarge'

            reset()
            include "xxhdpi", "xhdpi", "xxxhdpi"
        }

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable false

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
    lint {
        
    }
    /*
    variantFilter { variant ->
        def names = variant.getFlavors()*.name
        //variant.build
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
            if (names.contains("minApi21") && names.contains("demo")) {
                // Gradle ignores any variants that satisfy the conditions above.
                setIgnore(true)
            }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //def fileName
            if (outputFileName != null && outputFileName.contains('.apk')) {
                outputFileName = "${names}-${defaultConfig.versionName}.${defaultConfig.versionCode}.apk"
            }
        }
    }
    */
    dexOptions {
        javaMaxHeapSize "1G"

        //是否支持大工程模式
        jumboMode = true

        //预编译
        preDexLibraries = true

        //线程数
        threadCount = 8
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'android.arch.work:work-runtime:1.0.1'

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.github.GrenderG:Toasty:1.3.0'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.linkedin.dexmaker:dexmaker-mockito:2.25.0' //For html to pdf
}
